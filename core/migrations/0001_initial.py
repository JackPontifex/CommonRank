# Generated by Django 2.0.1 on 2018-02-17 21:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punishment', models.BooleanField()),
                ('expiry', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leaderboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Leaderboard')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elo', models.FloatField()),
                ('leaderboard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Leaderboard')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(max_length=200, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField(max_length=200, null=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Match')),
            ],
        ),
        migrations.AddField(
            model_name='notification',
            name='profileuser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Profile'),
        ),
        migrations.AddField(
            model_name='member',
            name='profileuser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Profile'),
        ),
        migrations.AddField(
            model_name='match',
            name='loser',
            field=models.ManyToManyField(related_name='loser', to='core.Member'),
        ),
        migrations.AddField(
            model_name='match',
            name='player1',
            field=models.ManyToManyField(related_name='player1', to='core.Member'),
        ),
        migrations.AddField(
            model_name='match',
            name='player2',
            field=models.ManyToManyField(related_name='player2', to='core.Member'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ManyToManyField(related_name='winner', to='core.Member'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='challengee',
            field=models.ManyToManyField(related_name='challengee', to='core.Member'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='challenger',
            field=models.ManyToManyField(related_name='challenger', to='core.Member'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='leaderboard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Leaderboard'),
        ),
    ]
